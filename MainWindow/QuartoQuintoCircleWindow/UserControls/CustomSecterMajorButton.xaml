<UserControl x:Class="MusicCircle.Interface.CustomSecterMajorButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MusicCircle.QuartoQuintoCircleWindow.UserControls"
             xmlns:vm="clr-namespace:MusicCircle.Settings.CircleSettingsWindow.Pages.PageViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="650" Height="600" Width="600">

    <UserControl.DataContext>
       <!-- <vm:ChordPageVM/>-->
        <vm:ChordPageVM/>
        <!--<local:RotateConverter x:Name="rotateConverter"/>-->
    </UserControl.DataContext>
    
    <UserControl.Resources >

        <local:RotateConverter x:Key="rotateConverter"/>

        <StreamGeometry x:Key="Geometry">
            M 325,260 L 566,325 A 250,250 0 0 0 566,195 Z
        </StreamGeometry>
        
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Data="{StaticResource Geometry}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background"    Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border"        Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border"     Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background"   Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border"       Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background"  Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border"      Color="#FFADB2B5"/>

        <Style  TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Path Name="border" 
                      Stroke="{TemplateBinding BorderBrush}" 
                      Fill="{TemplateBinding Background}" 
                      Data="{StaticResource Geometry}" />

                            <!-- TextBlock почему-то странно себя ведет.
                     При увеличении текста в свойстве Text этот самый текст ползет вверх-->

                            <!--Работает почти-->
                            <!-- <Label Content="{TemplateBinding Content}" 
                           Foreground="Black" 
                           FontWeight="Bold" 
                           FontSize="16"
                           RenderTransformOrigin="0.5,0.5" 
                           Margin="525,243,243,172">

                        <Label.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="90"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Label.RenderTransform>
                    </Label>-->

                            <!--Кастыль на костыле Текст просто подогнан под визуал ручками-->
                            <TextBlock Text="{TemplateBinding Content}" 
                                       Foreground="Black" 
                                       FontWeight="Bold" 
                                       FontSize="18"
                                       RenderTransformOrigin="0.5,0.5" 
                                       TextAlignment="Center"
                                       Margin="510,247,22,326" Width="NaN">

                                <TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <RotateTransform x:Key="Rotate000" CenterX="325" CenterY="260" Angle="000"/>
        <RotateTransform x:Key="Rotate030" CenterX="325" CenterY="260" Angle="030"/>
        <RotateTransform x:Key="Rotate060" CenterX="325" CenterY="260" Angle="060"/>
        <RotateTransform x:Key="Rotate090" CenterX="325" CenterY="260" Angle="090"/>
        <RotateTransform x:Key="Rotate120" CenterX="325" CenterY="260" Angle="120"/>
        <RotateTransform x:Key="Rotate150" CenterX="325" CenterY="260" Angle="150"/>
        <RotateTransform x:Key="Rotate180" CenterX="325" CenterY="260" Angle="180"/>
        <RotateTransform x:Key="Rotate210" CenterX="325" CenterY="260" Angle="210"/>
        <RotateTransform x:Key="Rotate240" CenterX="325" CenterY="260" Angle="240"/>
        <RotateTransform x:Key="Rotate270" CenterX="325" CenterY="260" Angle="270"/>
        <RotateTransform x:Key="Rotate300" CenterX="325" CenterY="260" Angle="300"/>
        <RotateTransform x:Key="Rotate330" CenterX="325" CenterY="260" Angle="330"/>
        <RotateTransform x:Key="Rotate360" CenterX="325" CenterY="260" Angle="360"/>
    </UserControl.Resources>


    <Grid x:Name="Circle">
        <!--Короче добавим пока кастыль с TextBlock в дальнейшем надо переопределить text в кнопке
            Возможно дабавление текста из вне в xaml коде 
            https://ru.stackoverflow.com/questions/852546/wpf-%D0%A1%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D1%83%D0%BD%D0%B8%D0%B2%D0%B5%D1%80%D1%81%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B3%D0%BE-%D1%81%D1%82%D0%B8%D0%BB%D1%8F-%D0%B4%D0%BB%D1%8F-%D0%BA%D0%BD%D0%BE%D0%BF%D0%BA%D0%B8-->

        <ItemsControl ItemsSource="{Binding OriganalMajorTonalityName}">
            <!--<ItemsControl.Resources>
                <x:Array x:Key="RotateTransformsArray" Type="{x:Type RotateTransform}">
                    <StaticResource ResourceKey="Rotate270" />
                    <StaticResource ResourceKey="Rotate300" />
                    <StaticResource ResourceKey="Rotate330" />
                    <StaticResource ResourceKey="Rotate000" />
                    <StaticResource ResourceKey="Rotate030" />
                    <StaticResource ResourceKey="Rotate060" />
                    <StaticResource ResourceKey="Rotate090" />
                    <StaticResource ResourceKey="Rotate120" />
                    <StaticResource ResourceKey="Rotate150" />
                    <StaticResource ResourceKey="Rotate180" />
                    <StaticResource ResourceKey="Rotate210" />
                    <StaticResource ResourceKey="Rotate240" />
                </x:Array>
            </ItemsControl.Resources>-->

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button 
                            Content="{Binding DescriptionOfTonality, UpdateSourceTrigger=PropertyChanged}"
                            RenderTransform="{StaticResource Rotate270}"
                            Click="button_CMajor_Click">
                    </Button>
                    
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!--Забыл что весь текст перевернется при повороте кнопки
        Вопрос: Как каждому элементу в itemcontrol задать особенные значения например заданные заранее staticresources -->
        <!--<Button Content="С"      Click="button_CMajor_Click"            RenderTransform="{StaticResource Rotate270}"/>
        <Button Content="G"      Click="button_GMagor_Click"            RenderTransform="{StaticResource Rotate300}"/>
        <Button Content="D"      Click="button_DMajor_Click"            RenderTransform="{StaticResource Rotate330}"/>
        <Button Content="A"      Click="button_AMajor_Click"            RenderTransform="{StaticResource Rotate000}"/>
        <Button Content="E"      Click="button_EMajor_Click"            RenderTransform="{StaticResource Rotate030}"/>
        <Button Content="B"      Click="button_BMajor_Click"            RenderTransform="{StaticResource Rotate060}"/>
        <Button Content="Gb/F#"  Click="button_Gflat_FsharpMajor_Click" RenderTransform="{StaticResource Rotate090}"/>
        <Button Content="Db"     Click="button_DflatMajor_Click"        RenderTransform="{StaticResource Rotate120}"/>
        <Button Content="Ab"     Click="button_AflatMajor_Click"        RenderTransform="{StaticResource Rotate150}"/>
        <Button Content="Eb"     Click="button_EflatMajor_Click"        RenderTransform="{StaticResource Rotate180}"/>
        <Button Content="Bb"     Click="button_BflatMajor_Click"        RenderTransform="{StaticResource Rotate210}"/>
        <Button Content="F"      Click="button_FMajor_Click"            RenderTransform="{StaticResource Rotate240}"/>-->
    </Grid>
</UserControl>
